{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Matt\\\\nft\\\\bithu_main_files\\\\bithu_v1.0\\\\src\\\\utils\\\\ContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { ModalContext } from \"./ModalContext\";\nimport { connectWallet, connectWalletLocaly, isWalletConnected, disconnectWallet } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [visibility, setVisibility] = useState(false);\n  const [walletModalvisibility, setModalvisibility] = useState(false);\n  const [shareModalVisibility, setShareModalvisibility] = useState(false);\n  const [metamaskModalVisibility, setMetamaskModalVisibility] = useState(false);\n  const [connectWalletModal, setConnectWalletModal] = useState(false);\n  const [account, setAccount] = useState('');\n\n  const mintModalHandle = () => {\n    setVisibility(!visibility);\n  };\n\n  const walletModalHandle = () => {\n    setModalvisibility(!walletModalvisibility);\n  };\n\n  const shareModalHandle = e => {\n    e.preventDefault();\n    setShareModalvisibility(!shareModalVisibility);\n  };\n\n  const metamaskModalHandle = () => {\n    setMetamaskModalVisibility(!metamaskModalVisibility);\n  };\n\n  const connectWalletModalHanlde = () => {\n    if (!isWalletConnected()) {\n      setConnectWalletModal(!connectWalletModal);\n    }\n  };\n\n  const connectWalletHandle = async () => {\n    const accounts = await connectWallet();\n    setAccount(accounts);\n\n    if (!isWalletConnected()) {\n      connectWalletLocaly();\n    }\n\n    setModalvisibility(!walletModalvisibility);\n  };\n\n  const isWalletAlreadyConnected = async () => {\n    if (isWalletConnected()) {\n      const accounts = await connectWallet();\n      setAccount(accounts);\n    }\n  };\n\n  const disconnectWalletFromApp = () => {\n    disconnectWallet();\n    setAccount('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: {\n      visibility,\n      mintModalHandle,\n      walletModalHandle,\n      walletModalvisibility,\n      shareModalVisibility,\n      shareModalHandle,\n      metamaskModalVisibility,\n      metamaskModalHandle,\n      account,\n      connectWalletHandle,\n      isWalletAlreadyConnected,\n      disconnectWalletFromApp,\n      connectWalletModalHanlde,\n      connectWalletModal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"6texM+/LaJ5S/0UrXyLv3U8A40g=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["useState","ModalContext","connectWallet","connectWalletLocaly","isWalletConnected","disconnectWallet","ContextProvider","children","visibility","setVisibility","walletModalvisibility","setModalvisibility","shareModalVisibility","setShareModalvisibility","metamaskModalVisibility","setMetamaskModalVisibility","connectWalletModal","setConnectWalletModal","account","setAccount","mintModalHandle","walletModalHandle","shareModalHandle","e","preventDefault","metamaskModalHandle","connectWalletModalHanlde","connectWalletHandle","accounts","isWalletAlreadyConnected","disconnectWalletFromApp"],"sources":["C:/Users/HP/Desktop/Matt/nft/bithu_main_files/bithu_v1.0/src/utils/ContextProvider.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { ModalContext } from \"./ModalContext\";\r\nimport { connectWallet, connectWalletLocaly, isWalletConnected , disconnectWallet } from '../config';\r\n\r\nconst ContextProvider = ({ children }) => {\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [walletModalvisibility, setModalvisibility] = useState(false);\r\n  const [shareModalVisibility, setShareModalvisibility] = useState(false);\r\n  const [metamaskModalVisibility, setMetamaskModalVisibility] = useState(false);\r\n  const [connectWalletModal, setConnectWalletModal] = useState(false);\r\n  const [account, setAccount] = useState('');\r\n\r\n\r\n  const mintModalHandle = () => {\r\n    setVisibility(!visibility);\r\n  };\r\n  const walletModalHandle = () => {\r\n    setModalvisibility(!walletModalvisibility);\r\n  };\r\n  const shareModalHandle = (e) => {\r\n    e.preventDefault();\r\n    setShareModalvisibility(!shareModalVisibility);\r\n  };\r\n\r\n  const metamaskModalHandle = () => {\r\n    setMetamaskModalVisibility(!metamaskModalVisibility);\r\n  };\r\n\r\n  const connectWalletModalHanlde = () => {\r\n    if(!isWalletConnected()){\r\n      setConnectWalletModal(!connectWalletModal);\r\n    }\r\n  };\r\n\r\n  const connectWalletHandle = async () => {\r\n    const accounts = await connectWallet();\r\n    setAccount(accounts);\r\n    if(!isWalletConnected()){\r\n      connectWalletLocaly();\r\n    }\r\n    setModalvisibility(!walletModalvisibility);\r\n  };\r\n\r\n  const isWalletAlreadyConnected = async () => {\r\n    if(isWalletConnected()){\r\n      const accounts = await connectWallet();\r\n      setAccount(accounts);\r\n    }\r\n  };\r\n\r\n  const disconnectWalletFromApp = () => {\r\n    disconnectWallet()\r\n    setAccount('');\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        visibility,\r\n        mintModalHandle,\r\n        walletModalHandle,\r\n        walletModalvisibility,\r\n        shareModalVisibility,\r\n        shareModalHandle,\r\n        metamaskModalVisibility,\r\n        metamaskModalHandle,\r\n        account,\r\n        connectWalletHandle,\r\n        isWalletAlreadyConnected,\r\n        disconnectWalletFromApp,\r\n        connectWalletModalHanlde,\r\n        connectWalletModal\r\n      }}\r\n    >\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContextProvider;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,aAAT,EAAwBC,mBAAxB,EAA6CC,iBAA7C,EAAiEC,gBAAjE,QAAyF,WAAzF;;;AAEA,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACxC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACU,qBAAD,EAAwBC,kBAAxB,IAA8CX,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACY,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAAC,KAAD,CAAhE;EACA,MAAM,CAACc,uBAAD,EAA0BC,0BAA1B,IAAwDf,QAAQ,CAAC,KAAD,CAAtE;EACA,MAAM,CAACgB,kBAAD,EAAqBC,qBAArB,IAA8CjB,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;;EAGA,MAAMoB,eAAe,GAAG,MAAM;IAC5BX,aAAa,CAAC,CAACD,UAAF,CAAb;EACD,CAFD;;EAGA,MAAMa,iBAAiB,GAAG,MAAM;IAC9BV,kBAAkB,CAAC,CAACD,qBAAF,CAAlB;EACD,CAFD;;EAGA,MAAMY,gBAAgB,GAAIC,CAAD,IAAO;IAC9BA,CAAC,CAACC,cAAF;IACAX,uBAAuB,CAAC,CAACD,oBAAF,CAAvB;EACD,CAHD;;EAKA,MAAMa,mBAAmB,GAAG,MAAM;IAChCV,0BAA0B,CAAC,CAACD,uBAAF,CAA1B;EACD,CAFD;;EAIA,MAAMY,wBAAwB,GAAG,MAAM;IACrC,IAAG,CAACtB,iBAAiB,EAArB,EAAwB;MACtBa,qBAAqB,CAAC,CAACD,kBAAF,CAArB;IACD;EACF,CAJD;;EAMA,MAAMW,mBAAmB,GAAG,YAAY;IACtC,MAAMC,QAAQ,GAAG,MAAM1B,aAAa,EAApC;IACAiB,UAAU,CAACS,QAAD,CAAV;;IACA,IAAG,CAACxB,iBAAiB,EAArB,EAAwB;MACtBD,mBAAmB;IACpB;;IACDQ,kBAAkB,CAAC,CAACD,qBAAF,CAAlB;EACD,CAPD;;EASA,MAAMmB,wBAAwB,GAAG,YAAY;IAC3C,IAAGzB,iBAAiB,EAApB,EAAuB;MACrB,MAAMwB,QAAQ,GAAG,MAAM1B,aAAa,EAApC;MACAiB,UAAU,CAACS,QAAD,CAAV;IACD;EACF,CALD;;EAOA,MAAME,uBAAuB,GAAG,MAAM;IACpCzB,gBAAgB;IAChBc,UAAU,CAAC,EAAD,CAAV;EACD,CAHD;;EAKA,oBACE,QAAC,YAAD,CAAc,QAAd;IACE,KAAK,EAAE;MACLX,UADK;MAELY,eAFK;MAGLC,iBAHK;MAILX,qBAJK;MAKLE,oBALK;MAMLU,gBANK;MAOLR,uBAPK;MAQLW,mBARK;MASLP,OATK;MAULS,mBAVK;MAWLE,wBAXK;MAYLC,uBAZK;MAaLJ,wBAbK;MAcLV;IAdK,CADT;IAAA,UAkBGT;EAlBH;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAzED;;GAAMD,e;;KAAAA,e;AA2EN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}