{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Matt\\\\nft\\\\bithu_main_files\\\\bithu_v1.0\\\\src\\\\common\\\\counter\\\\Counter.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = _ref => {\n  _s();\n\n  let {\n    className,\n    ...rest\n  } = _ref;\n  const [viewPortEntered, setViewPortEntered] = useState(false);\n  return /*#__PURE__*/_jsxDEV(CountUp, { ...rest,\n    start: viewPortEntered ? null : 0,\n    children: _ref2 => {\n      let {\n        countUpRef\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(VisibilitySensor, {\n        active: !viewPortEntered,\n        onChange: isVisible => {\n          if (isVisible) {\n            setViewPortEntered(true);\n          }\n        },\n        delayedCall: true,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: className,\n          ref: countUpRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"8AKg4UTEcuAm2yS5CsLyRzCMCDY=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","CountUp","VisibilitySensor","Counter","className","rest","viewPortEntered","setViewPortEntered","countUpRef","isVisible"],"sources":["C:/Users/HP/Desktop/Matt/nft/bithu_main_files/bithu_v1.0/src/common/counter/Counter.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport CountUp from \"react-countup\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nconst Counter = ({ className, ...rest }) => {\r\n  const [viewPortEntered, setViewPortEntered] = useState(false);\r\n\r\n  return (\r\n    <CountUp {...rest} start={viewPortEntered ? null : 0}>\r\n      {({ countUpRef }) => {\r\n        return (\r\n          <VisibilitySensor\r\n            active={!viewPortEntered}\r\n            onChange={isVisible => {\r\n              if (isVisible) {\r\n                setViewPortEntered(true);\r\n              }\r\n            }}\r\n            delayedCall\r\n          >\r\n            <span className={className} ref={countUpRef} />\r\n          </VisibilitySensor>\r\n        );\r\n      }}\r\n    </CountUp>\r\n  );\r\n};\r\n\r\nexport default Counter;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;;AAEA,MAAMC,OAAO,GAAG,QAA4B;EAAA;;EAAA,IAA3B;IAAEC,SAAF;IAAa,GAAGC;EAAhB,CAA2B;EAC1C,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,KAAD,CAAtD;EAEA,oBACE,QAAC,OAAD,OAAaK,IAAb;IAAmB,KAAK,EAAEC,eAAe,GAAG,IAAH,GAAU,CAAnD;IAAA,UACG,SAAoB;MAAA,IAAnB;QAAEE;MAAF,CAAmB;MACnB,oBACE,QAAC,gBAAD;QACE,MAAM,EAAE,CAACF,eADX;QAEE,QAAQ,EAAEG,SAAS,IAAI;UACrB,IAAIA,SAAJ,EAAe;YACbF,kBAAkB,CAAC,IAAD,CAAlB;UACD;QACF,CANH;QAOE,WAAW,MAPb;QAAA,uBASE;UAAM,SAAS,EAAEH,SAAjB;UAA4B,GAAG,EAAEI;QAAjC;UAAA;UAAA;UAAA;QAAA;MATF;QAAA;QAAA;QAAA;MAAA,QADF;IAaD;EAfH;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAtBD;;GAAML,O;;KAAAA,O;AAwBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}